env BACKEND_HOST;
env APP_HOST;

worker_processes auto;
events {
	worker_connections 1024;
}

http {
	include           mime.types;
	default_type      application/octet-stream;
	sendfile          on;
	keepalive_timeout 65s;

	upstream backend {
		ip_hash;
		# adjust backend host:port as needed
		server 172.17.0.1:3000;
	}

	upstream minio {
		server 172.17.0.1:9000;
	}

	server {
		listen       80;
		server_name  $app_host;
		
		# Redirect all HTTP requests to HTTPS
		return 301 https://$host$request_uri;
	}

	server {
		listen       443 ssl;
		server_name  $app_host;
		
		ssl_certificate     /etc/ssl/certs/fullchain.pem;
		ssl_certificate_key /etc/ssl/certs/privkey.pem;
		ssl_protocols       TLSv1.2 TLSv1.3;
		ssl_ciphers         HIGH:!aNULL:!MD5;

		location / {
			proxy_pass         http://backend;
			proxy_http_version 1.1;
			proxy_set_header   Upgrade $http_upgrade;
			proxy_set_header   Connection keep-alive;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
			proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header   X-Forwarded-Proto $scheme;
			proxy_cache_bypass $http_upgrade;
		}

		location /media/ {
			# remove subpath
			rewrite ^/media/(.*) /$1 break; 

			proxy_pass         http://minio;
			proxy_http_version 1.1;
			proxy_set_header   Upgrade $http_upgrade;
			proxy_set_header   Connection keep-alive;
			proxy_set_header   Host $host;
			proxy_set_header   X-Real-IP $remote_addr;
			proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header   X-Forwarded-Proto $scheme;
			proxy_set_header   X-NginX-Proxy true;
			proxy_connect_timeout 300;
			proxy_cache_bypass $http_upgrade;
		}

		# optional: serve static files
		# location /static/ {
		#     root /path/to/static/files;
		# }
	}
}